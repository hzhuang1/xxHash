rm -f *.o benchHash benchHash32 benchHash_avx2 benchHash_hw
clang -O3 -march=armv8-a+simd -fPIC -DXXH_VECTOR=XXH_NEON -DXXH3_NEON_LANES=8 -Wall -Wextra -Wstrict-aliasing=1 -std=c99     -I../..     -c -o main.o main.c
clang -O3 -march=armv8-a+simd -fPIC -DXXH_VECTOR=XXH_NEON -DXXH3_NEON_LANES=8 -Wall -Wextra -Wstrict-aliasing=1 -std=c99     -I../..     -c -o bhDisplay.o bhDisplay.c
clang -O3 -march=armv8-a+simd -fPIC -DXXH_VECTOR=XXH_NEON -DXXH3_NEON_LANES=8 -Wall -Wextra -Wstrict-aliasing=1 -std=c99     -I../..     -c -o benchHash.o benchHash.c
clang -O3 -march=armv8-a+simd -fPIC -DXXH_VECTOR=XXH_NEON -DXXH3_NEON_LANES=8 -Wall -Wextra -Wstrict-aliasing=1 -std=c99     -I../..     -c -o benchfn.o benchfn.c
clang -O3 -march=armv8-a+simd -fPIC -DXXH_VECTOR=XXH_NEON -DXXH3_NEON_LANES=8 -Wall -Wextra -Wstrict-aliasing=1 -std=c99     -I../..     -c -o timefn.o timefn.c
g++ -I../..    -O3 main.o bhDisplay.o benchHash.o benchfn.o timefn.o  -o benchHash
 ===  benchmarking 4 hash functions  === 
benchmarking large inputs : from 512 bytes (log9) to 128 MB (log27) 
xxh3   , 13529, 14664, 14318, 14191, 14133, 14102, 14074, 14056, 14047, 14052, 14035, 13903, 14041, 14040, 14037, 14045, 14047, 13724, 13933
XXH32  ,  9630, 10259, 10599, 10772, 10800, 10876, 10914, 10884, 10928, 10942, 10925, 10758, 10942, 10942, 10942, 10942, 10950, 10823, 10865
XXH64  , 12625, 13893, 14333, 14748, 14869, 15162, 15194, 15172, 15255, 15237, 14663, 14620, 14706, 14714, 14737, 14838, 14919, 14549, 14818
XXH128 , 10754, 12895, 13449, 13743, 13905, 13980, 14027, 14015, 14030, 14047, 14016, 13926, 14017, 14033, 14039, 14043, 14051, 13879, 14035
Throughput small inputs of fixed size (from 2 to 2 bytes): 
xxh3   , 295540367
XXH32  , 267617573
XXH64  , 178846979
XXH128 , 289018022
benchmarking random size inputs [1-N] : 
xxh3   , 295470724
XXH32  , 204250149
XXH64  , 146191567
XXH128 , 288800000
Latency for small inputs of fixed size : 
xxh3   , 128886037
XXH32  , 100376670
XXH64  ,  96927617
XXH128 , 123164154
Latency for small inputs of random size [1-N] : 
xxh3   , 127761208
XXH32  , 107669504
XXH64  , 101238186
XXH128 , 123129148
